-- Test with fixed dimension
-- ==
-- input { [0,1,2,3,4] [0,1,2,3,4] [5,6,7,8,9] }
-- output {
--         [[[5, 1, 2, 3, 4],
--           [0, 6, 2, 3, 4],
--           [0, 1, 7, 3, 4],
--           [0, 1, 2, 8, 4],
--           [0, 1, 2, 3, 9]],
--          [[5, 1, 2, 3, 4],
--           [0, 6, 2, 3, 4],
--           [0, 1, 7, 3, 4],
--           [0, 1, 2, 8, 4],
--           [0, 1, 2, 3, 9]],
--          [[5, 1, 2, 3, 4],
--           [0, 6, 2, 3, 4],
--           [0, 1, 7, 3, 4],
--           [0, 1, 2, 8, 4],
--           [0, 1, 2, 3, 9]],
--          [[5, 1, 2, 3, 4],
--           [0, 6, 2, 3, 4],
--           [0, 1, 7, 3, 4],
--           [0, 1, 2, 8, 4],
--           [0, 1, 2, 3, 9]],
--          [[5, 1, 2, 3, 4],
--           [0, 6, 2, 3, 4],
--           [0, 1, 7, 3, 4],
--           [0, 1, 2, 8, 4],
--           [0, 1, 2, 3, 9]]]
-- }

let main (arr: []i32) (is: []i32) (js: []i32) =
  [map2(\i j -> (copy arr with [i] = j)) is js
  ,map2(\i j -> (copy arr with [i] = j)) is js
  ,map2(\i j -> (copy arr with [i] = j)) is js
  ,map2(\i j -> (copy arr with [i] = j)) is js
  ,map2(\i j -> (copy arr with [i] = j)) is js
  ]
